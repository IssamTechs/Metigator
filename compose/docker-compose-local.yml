version: "3.5"

services:
  api:
    image: metigator.api:local
    container_name: api
    ports:
      - '5000:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  customers-service:
    image: metigator.services.customers:local
    container_name: customers-service
    ports:
      - '5001:5000'  
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  identity-service:
    image: metigator.services.identity:local
    container_name: identity-service
    ports:
      - '5002:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  notifications-service:
    image: metigator.services.notifications:local
    container_name: notifications-service
    ports:
      - '5003:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  operations-service:
    image: metigator.services.operations:local
    container_name: operations-service
    ports:
      - '5004:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  orders-service:
    image: metigator.services.orders:local
    container_name: orders-service
    ports:
      - '5005:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  products-service:
    image: metigator.services.products:local
    container_name: products-service
    ports:
      - '5006:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

  signalr-service:
    image: metigator.services.signalr:local
    container_name: signalr-service
    ports:
      - '5007:5000'
    networks:
      - metigator
    environment:
      - 'CONSUL_ENABLED=false'
      - 'VAULT_ENABLED=false'

networks:
  metigator:
    name: metigator-network
    external: true